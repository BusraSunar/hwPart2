/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package hwPart2;

import static spark.Spark.get;
import static spark.Spark.port;
import static spark.Spark.post;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;


import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;


public class App
{
  public String getGreeting() {
      return "Hello world.";
  }

  public static boolean isItMultiplied(ArrayList<Integer> array, ArrayList<Integer> array2, int e){
    System.out.println("inside search");
    int counter =0;
    if (array == null || array2 == null) return false;

    if(e ==0) throw new ArithmeticException();

    if(array.isEmpty() || array2.isEmpty()) return false;

    if(array.size()!=array2.size()) return false;

    for (int i=0; i <array.size();i++){
      if(array.get(i) == array2.get(i)/e)
        counter++;

    }

    if(counter == array.size())
      return true;

    return false;
  }

  public static void main(String[] args) {
      port(getHerokuAssignedPort());

      get("/", (req, res) -> "Hello, World");

      post("/compute", (req, res) -> {
        //System.out.println(req.queryParams("input1"));
        //System.out.println(req.queryParams("input2"));


        //input1 icin 
        String input1 = req.queryParams("input1");
        java.util.Scanner sc1 = new java.util.Scanner(input1);
        sc1.useDelimiter("[;\r\n]+");
        java.util.ArrayList<Integer> inputList = new java.util.ArrayList<>();
        while (sc1.hasNext())
        {
          int value = Integer.parseInt(sc1.next().replaceAll("\\s",""));
          inputList.add(value);
        }
        sc1.close();
        System.out.println(inputList);

        //input2 icin 
        String input2 = req.queryParams("input2");
        java.util.Scanner sc2 = new java.util.Scanner(input2);
        sc2.useDelimiter("[;\r\n]+");
        java.util.ArrayList<Integer> inputList2 = new java.util.ArrayList<>();
        while (sc2.hasNext())
        {
          int value = Integer.parseInt(sc2.next().replaceAll("\\s",""));
          inputList2.add(value);
        }
        sc2.close();
        System.out.println(inputList2);


        String input3 = req.queryParams("input3").replaceAll("\\s","");
        int input2AsInt = Integer.parseInt(input3);

        boolean result = App.isItMultiplied(inputList, inputList2 ,input2AsInt); //buraya bak 

        Map<String, Boolean> map = new HashMap<String, Boolean>();
        map.put("result", result);
        return new ModelAndView(map, "compute.mustache");
      }, new MustacheTemplateEngine());


      get("/compute",
          (rq, rs) -> {
            Map<String, String> map = new HashMap<String, String>();
            map.put("result", "not computed yet!");
            return new ModelAndView(map, "compute.mustache");
          },
          new MustacheTemplateEngine());
  }

  static int getHerokuAssignedPort() {
      ProcessBuilder processBuilder = new ProcessBuilder();
      if (processBuilder.environment().get("PORT") != null) {
          return Integer.parseInt(processBuilder.environment().get("PORT"));
      }
      return 4567; //return default port if heroku-port isn't set (i.e. on localhost)
  }
}
